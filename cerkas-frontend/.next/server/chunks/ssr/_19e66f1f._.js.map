{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/khalid/go/src/github.com/cerkas/cerkas-frontend/app/%5BtenantCode%5D/%5BproductCode%5D/%5BobjectCode%5D/%5BviewContentCode%5D/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useParams } from \"next/navigation\";\nimport { useEffect, useState } from \"react\";\n\ninterface RouteParams {\n  tenantCode: string;\n  productCode: string;\n  objectCode: string;\n  viewContentCode: string;\n  [key: string]: string | string[];\n}\n\nexport default function DynamicPage() {\n  const params = useParams<RouteParams>();\n  const { tenantCode, productCode, objectCode, viewContentCode } = params;\n\n  const [responseData, setResponseData] = useState<any>(null); // You can define a more specific type if you know the shape\n  const [viewContent, setViewContent] = useState<any>(null);\n  const [isAPIResponseAccordionOpen, setIsAPIResponseAccordionOpen] = useState(false);\n  const [isDynamicParamAccordionOpen, setIsDynamicParamAccordionOpen] = useState(false);\n\n  useEffect(() => {\n    const sendRequest = async () => {\n      try {\n        const response = await fetch(\n          `http://localhost:8080/t/${tenantCode}/p/${productCode}/o/${objectCode}/view/${viewContentCode}/record`,\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({}), // Add any payload here if needed\n          }\n        );\n\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch\");\n        }\n\n        const data = await response.json();\n        setResponseData(data.data);\n        setViewContent(data.data.view_content);\n      } catch (error) {\n        console.error(\"API error:\", error);\n        setResponseData({ error: (error as Error).message });\n      }\n    };\n\n    if (tenantCode && productCode && objectCode && viewContentCode) {\n      sendRequest();\n    }\n  }, [tenantCode, productCode, objectCode, viewContentCode]);\n\n  return (\n    <div className=\"flex flex-col items-left justify-left min-h-screen bg-gray-100\">\n      <div className=\"bg-white p-6 rounded-lg shadow-md\">\n        <h1 className=\"text-3xl font-bold text-indigo-700 mb-6\">\n          {viewContent?.object?.display_name}\n        </h1>\n\n        <div className=\"mt-2\">\n          <button\n            onClick={() => setIsDynamicParamAccordionOpen(!isDynamicParamAccordionOpen)}\n            className=\"w-full flex justify-between items-center text-left bg-indigo-100 px-4 py-2 rounded-lg font-semibold text-gray-800 hover:bg-indigo-200 transition\"\n          >\n            <span>Dynamic Param</span>\n            <span>{isDynamicParamAccordionOpen ? \"−\" : \"+\"}</span>\n          </button>\n\n          {isDynamicParamAccordionOpen && (\n            <pre className=\"mt-2 bg-gray-200 text-sm p-4 rounded overflow-auto text-gray-800\">\n              <div className=\"space-y-3 text-gray-700\">\n                <p>\n                  <span className=\"font-semibold\">Tenant Code:</span>{\" \"}\n                  <span className=\"text-indigo-600\">{tenantCode}</span>\n                </p>\n                <p>\n                  <span className=\"font-semibold\">Product Code:</span>{\" \"}\n                  <span className=\"text-indigo-600\">{productCode}</span>\n                </p>\n                <p>\n                  <span className=\"font-semibold\">Object Code:</span>{\" \"}\n                  <span className=\"text-indigo-600\">{objectCode}</span>\n                </p>\n                <p>\n                  <span className=\"font-semibold\">View Content Code:</span>{\" \"}\n                  <span className=\"text-indigo-600\">{viewContentCode}</span>\n                </p>\n              </div>\n            </pre>\n          )}\n        </div>\n\n        <div className=\"mt-2\">\n          <button\n            onClick={() => setIsAPIResponseAccordionOpen(!isAPIResponseAccordionOpen)}\n            className=\"w-full flex justify-between items-center text-left bg-indigo-100 px-4 py-2 rounded-lg font-semibold text-gray-800 hover:bg-indigo-200 transition\"\n          >\n            <span>Layout API Response</span>\n            <span>{isAPIResponseAccordionOpen ? \"−\" : \"+\"}</span>\n          </button>\n\n          {isAPIResponseAccordionOpen && (\n            <pre className=\"mt-2 bg-gray-200 text-sm p-4 rounded overflow-auto text-gray-800\">\n              {responseData ? JSON.stringify(responseData, null, 2) : \"Loading...\"}\n            </pre>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAae,SAAS;IACtB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,UAAU,EAAE,WAAW,EAAE,UAAU,EAAE,eAAe,EAAE,GAAG;IAEjE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAO,OAAO,4DAA4D;IACzH,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAO;IACpD,MAAM,CAAC,4BAA4B,8BAA8B,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7E,MAAM,CAAC,6BAA6B,+BAA+B,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE/E,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,cAAc;YAClB,IAAI;gBACF,MAAM,WAAW,MAAM,MACrB,CAAC,wBAAwB,EAAE,WAAW,GAAG,EAAE,YAAY,GAAG,EAAE,WAAW,MAAM,EAAE,gBAAgB,OAAO,CAAC,EACvG;oBACE,QAAQ;oBACR,SAAS;wBACP,gBAAgB;oBAClB;oBACA,MAAM,KAAK,SAAS,CAAC,CAAC;gBACxB;gBAGF,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,IAAI,MAAM;gBAClB;gBAEA,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,gBAAgB,KAAK,IAAI;gBACzB,eAAe,KAAK,IAAI,CAAC,YAAY;YACvC,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,cAAc;gBAC5B,gBAAgB;oBAAE,OAAO,AAAC,MAAgB,OAAO;gBAAC;YACpD;QACF;QAEA,IAAI,cAAc,eAAe,cAAc,iBAAiB;YAC9D;QACF;IACF,GAAG;QAAC;QAAY;QAAa;QAAY;KAAgB;IAEzD,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BACX,aAAa,QAAQ;;;;;;8BAGxB,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BACC,SAAS,IAAM,+BAA+B,CAAC;4BAC/C,WAAU;;8CAEV,8OAAC;8CAAK;;;;;;8CACN,8OAAC;8CAAM,8BAA8B,MAAM;;;;;;;;;;;;wBAG5C,6CACC,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;;0DACC,8OAAC;gDAAK,WAAU;0DAAgB;;;;;;4CAAoB;0DACpD,8OAAC;gDAAK,WAAU;0DAAmB;;;;;;;;;;;;kDAErC,8OAAC;;0DACC,8OAAC;gDAAK,WAAU;0DAAgB;;;;;;4CAAqB;0DACrD,8OAAC;gDAAK,WAAU;0DAAmB;;;;;;;;;;;;kDAErC,8OAAC;;0DACC,8OAAC;gDAAK,WAAU;0DAAgB;;;;;;4CAAoB;0DACpD,8OAAC;gDAAK,WAAU;0DAAmB;;;;;;;;;;;;kDAErC,8OAAC;;0DACC,8OAAC;gDAAK,WAAU;0DAAgB;;;;;;4CAA0B;0DAC1D,8OAAC;gDAAK,WAAU;0DAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAO7C,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BACC,SAAS,IAAM,8BAA8B,CAAC;4BAC9C,WAAU;;8CAEV,8OAAC;8CAAK;;;;;;8CACN,8OAAC;8CAAM,6BAA6B,MAAM;;;;;;;;;;;;wBAG3C,4CACC,8OAAC;4BAAI,WAAU;sCACZ,eAAe,KAAK,SAAS,CAAC,cAAc,MAAM,KAAK;;;;;;;;;;;;;;;;;;;;;;;AAOtE","debugId":null}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":["file:///Users/khalid/go/src/github.com/cerkas/cerkas-frontend/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}