{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/khalid/go/src/github.com/cerkas/cerkas-frontend/app/appConfig.ts"],"sourcesContent":["// appConfig.ts\nexport const dashboardConfig = {\n  title: \"Fetchly\",\n  backendAPIURL: \"http://localhost:8080\"\n};\n\nexport const APIMethod = {\n  POST: \"POST\"\n}"],"names":[],"mappings":"AAAA,eAAe;;;;;AACR,MAAM,kBAAkB;IAC7B,OAAO;IACP,eAAe;AACjB;AAEO,MAAM,YAAY;IACvB,MAAM;AACR","debugId":null}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["file:///Users/khalid/go/src/github.com/cerkas/cerkas-frontend/app/components/DashboardLayout.tsx"],"sourcesContent":["\"use client\"; // Client component for interactivity\n\nimport { ChevronDown, ChevronLeft, ChevronRight } from \"lucide-react\";\nimport Link from \"next/link\";\nimport { ReactNode, useState } from \"react\";\nimport { dashboardConfig } from \"../appConfig\";\n\n// Props for the DashboardLayout component\ninterface DashboardLayoutProps {\n  children: ReactNode;\n}\n\nconst menuItems = [\n  {\n    label: \"Home\",\n    href: \"/\",\n  },\n  {\n    label: \"About\",\n    href: \"/about\",\n  },\n  {\n    label: \"Dynamic Page\",\n    children: [\n      {\n        label: \"User\",\n        href: \"/fetchly/delivery/user/default\",\n      },\n      {\n        label: \"User Address\",\n        href: \"/fetchly/delivery/user_address/default\",\n      },\n    ],\n  }\n];\n\nexport default function DashboardLayout({ children }: DashboardLayoutProps) {\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n\n  const SidebarMenu = ({ isSidebarOpen }: { isSidebarOpen: boolean }) => {\n    const [expanded, setExpanded] = useState<Record<string, boolean>>({});\n\n    const toggleExpand = (label: string) => {\n      setExpanded((prev) => ({ ...prev, [label]: !prev[label] }));\n    };\n\n    return (\n      <ul>\n        {menuItems.map((item) => (\n          <li key={item.label}>\n            {item.children ? (\n              <div>\n                <button\n                  onClick={() => toggleExpand(item.label)}\n                  className={`w-full flex items-center justify-between p-2 pl-3 hover:bg-amber-600 transition-colors ${isSidebarOpen ? \"text-left\" : \"text-center\"\n                    }`}\n                >\n                  <span>{isSidebarOpen ? item.label : item.label.charAt(0)}</span>\n                  {isSidebarOpen && (\n                    <span>{expanded[item.label] ? <ChevronDown size={16} /> : <ChevronRight size={16} />}</span>\n                  )}\n                </button>\n                {expanded[item.label] && isSidebarOpen && (\n                  <ul className=\"p-2\">\n                    {item.children.map((child) => (\n                      <li key={child.label}>\n                        <Link\n                          href={child.href}\n                          className=\"block p-2 pl-3 text-sm hover:bg-amber-600 transition-colors\"\n                        >\n                          {child.label}\n                        </Link>\n                      </li>\n                    ))}\n                  </ul>\n                )}\n              </div>\n            ) : (\n              <Link\n                href={item.href}\n                className={`block p-2 pl-3 hover:bg-amber-600 transition-colors ${isSidebarOpen ? \"text-left\" : \"text-center\"\n                  }`}\n              >\n                {isSidebarOpen ? item.label : item.label.charAt(0)}\n              </Link>\n            )}\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  return (\n    <div className=\"flex min-h-screen\">\n      {/* Sidebar */}\n      <aside\n        className={`flex flex-col h-screen bg-gradient-to-b from-amber-900 to-amber-700 text-white shadow-lg transition-all duration-300 ${isSidebarOpen ? \"w-64\" : \"w-14\"}`}\n      >\n        {/* Header */}\n        <div className=\"p-2 pl-3 flex items-center justify-between border-b border-amber-600\">\n          {isSidebarOpen && (\n            <h2 className=\"text-2xl font-semibold tracking-wide\">{dashboardConfig.title}</h2>\n          )}\n          <button\n            onClick={toggleSidebar}\n            className=\"p-2 rounded-lg bg-amber-600 hover:bg-amber-500 focus:outline-none focus:ring-2 focus:ring-amber-400 transition-colors\"\n          >\n            {isSidebarOpen ? (\n              <ChevronLeft className=\"w-4 h-4 text-white\" />\n            ) : (\n              <ChevronRight className=\"w-4 h-4 text-white\" />\n            )}\n          </button>\n        </div>\n\n        {/* Navigation */}\n        <div className=\"flex-1 overflow-y-auto\">\n          <nav className=\"mt-2\">\n            <SidebarMenu isSidebarOpen={isSidebarOpen} />\n          </nav>\n        </div>\n\n        {/* User Profile */}\n        <div className=\"mt-auto border-t border-amber-600 p-2 flex items-center gap-3\">\n          <div className=\"w-10 h-10 rounded-full bg-white/20 flex items-center justify-center text-white font-bold\">\n            U\n          </div>\n          {isSidebarOpen && (\n            <div className=\"flex flex-col\">\n              <span className=\"text-sm font-medium\">Username</span>\n              <span className=\"text-xs text-amber-200\">user@email.com</span>\n            </div>\n          )}\n        </div>\n      </aside>\n\n\n      {/* Main Content */}\n      <main className=\"flex-1 bg-gray-50 h-screen flex flex-col overflow-auto\">\n        {/* Optional fixed header inside main */}\n        {/* <div className=\"p-4 border-b bg-gradient-to-r from-amber-900 to-amber-700 text-white shadow z-10\">\n          <h1 className=\"text-xl font-semibold\">Page Title</h1>\n        </div> */}\n\n        {/* Scrollable content area */}\n        <div className=\"flex-1 overflow-auto\">\n          {children}\n        </div>\n      </main>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}